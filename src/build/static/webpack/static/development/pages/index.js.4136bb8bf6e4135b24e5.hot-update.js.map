{"version":3,"file":"static/webpack/static/development/pages/index.js.4136bb8bf6e4135b24e5.hot-update.js","sources":["webpack:///./components/Console.js"],"sourcesContent":["import Light from '../components/Light';\n\nfunction Input() {\n  return <input type=\"checkbox\" />;\n}\nfunction Console() {\n  var dummyData = [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1];\n  return (\n    <div>\n      <style jsx global>{`\n        * {\n          box-sizing: border-box;\n        }\n\n        .case {\n          display: flex;\n          border-radius: 2px;\n          z-index: 0;\n          width: 100%;\n          height: 100%;\n          margin: 0 auto;\n          background-color: #26c5ff;\n          opacity: 1;\n          box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3),\n            12px 12px 20px 0 rgba(0, 0, 0, 0.8);\n          padding: 1.2em;\n          min-height: calc(100vh - 400px);\n        }\n\n        .display {\n          overflow: hidden;\n          width: 100%;\n          padding: 1.2em;\n          flex-direction: column-reverse;\n          justify-content: flex-start;\n          position: relative;\n          background-color: #080808;\n          opacity: 1;\n          z-index: 5;\n          border-radius: 10px;\n          filter: drop-shadow(16px 16px 20px rgba(0, 0, 0, 0.25));\n          box-shadow: inset 0px 1px 1px 1px rgba(0, 0, 0, 1),\n            inset 2px -2px 1px rgba(255, 255, 255, 0.35);\n        }\n\n        .panel-header {\n          display: flex;\n          flex-direction: column;\n          width: 100%;\n          height: auto;\n        }\n\n        .panel-header .logo {\n          flex: 0;\n          background-color: transparent;\n          padding: 2rem 0.5rem;\n          position: relative;\n          border-radius: 10px;\n          border: solid 1px black;\n        }\n\n        .panel-header .rest {\n          flex: 1;\n          border-radius: 10px;\n          border: solid 1px white;\n          padding: 1rem;\n          position: relative;\n        }\n\n        .panel-header .rest p {\n          font-size: 0.8rem;\n          line-height: 1.4rem;\n        }\n\n        .panel-header .line {\n          position: absolute;\n          bottom: 7px;\n          right: 0;\n          left: 0;\n          display: inline-block;\n          width: 100%;\n          background: white;\n          height: 3px;\n          border-radius: 50px;\n          z-index: 0;\n          box-shadow: inset 0px 1px 1px 1px rgba(0, 0, 0, 1),\n            inset 2px -2px 1px rgba(255, 255, 255, 0.35);\n          z-index: 0;\n        }\n\n        .panel-header small {\n          display: block;\n          position: relative;\n          width: 100%;\n          color: white;\n          letter-spacing: 2.5px;\n          font-weight: bold;\n          margin-bottom: 20px;\n          font-family: Helvetica, Arial, sans-serif;\n          text-transform: uppercase;\n          font-size: 0.8rem;\n          text-shadow: rgba(0, 0, 0, 0.28) 1px 1px 0px;\n          text-align: center;\n        }\n\n        .panel-header small > span {\n          background-color: black;\n          text-align: center;\n          position: relative;\n          padding: 0px 10px;\n        }\n\n        .title {\n          position: absolute;\n          top: 2px;\n          margin-top: -10px;\n          text-transform: uppercase;\n          font-size: 1rem;\n          letter-spacing: 2px;\n          font-family: Raleway, Arial, sans-serif;\n          background-color: black;\n          display: inline-block;\n          font-weight: bold;\n          padding: 0px 15px;\n        }\n\n        .panel-header .rest p {\n          font-size: 0.8rem;\n          line-height: 1.4rem;\n        }\n\n        .panel-header .heading {\n          font-family: 'Computer';\n          font-size: 2rem;\n          line-height: 2rem;\n          font-weight: 700;\n          letter-spacing: 0.0975rem;\n          text-transform: uppercase;\n          white-space: nowrap;\n          letter-spacing: 9px;\n          color: #ffffff;\n          z-index: 5;\n          position: relative;\n          margin-bottom: 15px;\n          text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);\n          text-align: center;\n          white-space: pre-wrap;\n        }\n\n        .panel-child {\n          display: flex;\n          flex-direction: row;\n          width: 100%;\n          position: relative;\n          border-radius: 10px;\n          border-width: 1px;\n          border-style: solid;\n          border-color: white;\n          border-image: initial;\n          flex: 1 1 0%;\n          padding: 1em;\n          margin-bottom: 20px;\n        }\n\n        .grid-output {\n          font-size: 3px;\n        }\n\n        .panel-row .side,\n        .panel-row .main {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n        }\n\n        @media (min-width: 900px) {\n          .case {\n            min-height: 100%;\n          }\n\n          .panel-header {\n            flex-direction: row;\n          }\n\n          .panel-header .heading {\n            min-width: 500px;\n          }\n        }\n      `}</style>\n      <div className=\"case\">\n        <div className=\"display\">\n          <div className=\"panel\">\n            <div className=\"panel-child panel-output\">\n              <h3 className=\"title\">OUTPUT</h3>\n              <div className=\"grid-output\">\n                {dummyData.map((v, i) => (\n                  <Light key={i} status={!!v} />\n                ))}\n              </div>\n            </div>\n            <div className=\"panel-child panel-computer\">\n              <h3 className=\"title\">COMPUTER</h3>\n              <div>\n                <div className=\"main\">\n                  <div id=\"x-input\" className=\"form-check form-check-inline\">\n                    <label className=\"form-check-label\">X&nbsp;</label>\n                    {dummyData.map((v, i) => (\n                      <Input key={i} status={!!v} />\n                    ))}\n                  </div>\n                  <div id=\"y-input\" className=\"form-check form-check-inline\">\n                    <label className=\"form-check-label\">Y&nbsp;</label>\n                    {dummyData.map((v, i) => (\n                      <Input key={i} status={!!v} />\n                    ))}\n                  </div>\n                </div>\n                <div className=\"side\">\n                  <span>Flag</span>\n                  <div id=\"flags\" className=\"form-check form-check-inline\">\n                    <input type=\"checkbox\" id=\"flags-1\" value=\"1\" />\n                    <label for=\"flags-1\" className=\"form-check-label\">\n                      zx\n                    </label>\n                  </div>\n                  <div id=\"flags\" className=\"form-check form-check-inline\">\n                    <input type=\"checkbox\" id=\"flags-2\" value=\"2\" />\n                    <label for=\"flags-2\" className=\"form-check-label\">\n                      nx\n                    </label>\n                  </div>\n                  <div id=\"flags\" className=\"form-check form-check-inline\">\n                    <input type=\"checkbox\" id=\"flags-3\" value=\"3\" />\n                    <label for=\"flags-3\" className=\"form-check-label\">\n                      zy\n                    </label>\n                  </div>\n                  <div id=\"flags\" className=\"form-check form-check-inline\">\n                    <input type=\"checkbox\" id=\"flags-4\" value=\"4\" />\n                    <label for=\"flags-4\" className=\"form-check-label\">\n                      ny\n                    </label>\n                  </div>\n                  <div id=\"flags\" className=\"form-check form-check-inline\">\n                    <input type=\"checkbox\" id=\"flags-5\" value=\"5\" />\n                    <label for=\"flags-5\" className=\"form-check-label\">\n                      op\n                    </label>\n                  </div>\n                  <div id=\"flags\" className=\"form-check form-check-inline\">\n                    <input type=\"checkbox\" id=\"flags-6\" value=\"6\" />\n                    <label for=\"flags-6\" className=\"form-check-label\">\n                      no\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"panel-header\">\n              <div className=\"logo\">\n                <h1 className=\"heading\">Serverless Computer</h1>\n                <small className=\"sub-heading\">\n                  <div className=\"line\" />\n                  <span>ALU using Azure Functions as logic gates</span>\n                </small>\n              </div>\n              <div className=\"rest\">\n                <h3 className=\"title\">Description</h3>\n                <p>\n                  This is a 16-bit ALU's running in the cloud. Each logic gate\n                  is implemented as an{' '}\n                  <a href=\"https://docs.microsoft.com/azure/azure-functions/durable/durable-functions-overview?WT.mc_id=serverlesscomputer-website-alvidela\">\n                    Azure Function\n                  </a>\n                </p>\n                <p>\n                  Set the 16-bit inputs X and Y below and submit your operations\n                  so they can be on the serverless ALU.\n                </p>\n                <p>\n                  <span>\n                    built by @old_sound &<a href=\"curcio.be\">@okbel</a>\n                  </span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Console;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqsourceRoot":""}